import axios from 'axios';
declare const methods: readonly ["put", "get", "post", "patch", "delete"];
export declare const NO_LIMIT = 99999;
export declare const wrappedAxios: {
    [K in (typeof methods)[number]]: (typeof axios)[K];
};
export declare const useClearAllMutation: any, useMeQuery: any, useGetClientQuery: any, useGetClientsQuery: any, useCreateClientMutation: any, useUpdateClientMutation: any, useDeleteClientMutation: any, useGetTodoQuery: any, useGetTodosQuery: any, useCreateTodoMutation: any, useUpdateTodoMutation: any, useDeleteTodoMutation: any, useGetProjectedTodosQuery: any, useGetDueTodosQuery: any, useResendInviteMutation: any, useGetPracticeQuery: any, useGetPracticesQuery: any, useUpdatePracticeMutation: any, useCreatePracticeMutation: any, useDeletePracticeMutation: any, useGetPractitionerQuery: any, useGetPractitionersQuery: any, useUpdatePractitionerMutation: any, useCreatePractitionerMutation: any, useDeletePractitionerMutation: any, useGetQuestionnaireQuery: any, useGetQuestionnairesQuery: any, useUpdateQuestionnaireMutation: any, useCreateQuestionnaireMutation: any, useDeleteQuestionnaireMutation: any, useGetQuestionnaireResultQuery: any, useGetQuestionnaireResultsQuery: any, useUpdateQuestionnaireResultMutation: any, useCreateQuestionnaireResultMutation: any, useDeleteQuestionnaireResultMutation: any, useCreateQuestionnaireAnswerMutation: any, useGetContentQuery: any, useGetContentsQuery: any, useUpdateContentMutation: any, useCreateContentMutation: any, useDeleteContentMutation: any, useGetMessageQuery: any, useGetMessagesQuery: any, useCreateMessageMutation: any, useMarkChatReadMutation: any, useGetResultQuery: any, useGetResultsQuery: any, useCreateResultMutation: any, useGetCategoryQuery: any, useGetCategorysQuery: any, useCreateAssignedResourceMutation: any, useUpdateAssignedResourceMutation: any, useDeleteAssignedResourceMutation: any, useGetAssignedResourcesQuery: any, useGetAssignedResourceQuery: any, useReassignResourceMutation: any, useGetJourneyQuery: any, useGetJourneysQuery: any, useCreateJourneyMutation: any, useUpdateJourneyMutation: any, useDeleteJourneyMutation: any, useGetJourneySuggestionsQuery: any, useGetWorksheetQuery: any, useGetWorksheetsQuery: any, useCreateWorksheetMutation: any, useUpdateWorksheetMutation: any, useDeleteWorksheetMutation: any, useGetClientWorksheetQuery: any, useGetClientWorksheetsQuery: any, useCreateClientWorksheetMutation: any, useUpdateClientWorksheetMutation: any, useDeleteClientWorksheetMutation: any, useGetAssignedJourneyQuery: any, useGetAssignedJourneysQuery: any, useCreateAssignedJourneyMutation: any, useDeleteAssignedJourneyMutation: any, useUpdateAssignedJourneyMutation: any, useProgressAssignedJourneyMutation: any, useGetClientMilestoneStopQuery: any, useGetClientMilestoneStopsQuery: any, useUpdateClientMilestoneStopMutation: any, useGetStopForClientMilestoneStopQuery: any, useGetClientInsightsPresetQuery: any, useGetClientInsightsPresetsQuery: any, useCreateClientInsightsPresetMutation: any, useUpdateClientInsightsPresetMutation: any, useDeleteClientInsightsPresetMutation: any, useGetLoggedEventsQuery: any, useGetLoggedEventQuery: any, useGetCheckInQuery: any, useGetCheckInsQuery: any, useCreateCheckInMutation: any, useDeleteCheckInMutation: any, useUpdateCheckInMutation: any, useGetJournalEntryQuery: any, useGetJournalEntrysQuery: any, useCreateJournalEntryMutation: any, useUpdateJournalEntryMutation: any, useDeleteJournalEntryMutation: any, useGetAppointmentQuery: any, useGetAppointmentsQuery: any, useCreateAppointmentMutation: any, useUpdateAppointmentMutation: any, useDeleteAppointmentMutation: any, useGetRecurringAppointmentQuery: any, useGetRecurringAppointmentsQuery: any, useCreateRecurringAppointmentMutation: any, useUpdateRecurringAppointmentMutation: any, useDeleteRecurringAppointmentMutation: any, useGetCaseNoteQuery: any, useGetCaseNotesQuery: any, useCreateCaseNoteMutation: any, useUpdateCaseNoteMutation: any, useDeleteCaseNoteMutation: any, useGetGoalsQuery: any, useGetGoalQuery: any, useCreateGoalMutation: any, useUpdateGoalMutation: any, useDeleteGoalMutation: any, useGetClientContentQuery: any, useGetClientContentsQuery: any, useCreateClientContentMutation: any, useUpdateClientContentMutation: any, useGetNotificationsQuery: any, useUpdateNotificationMutation: any, useGetResourcesQuery: any, useGetReportingStatsQuery: any, useGetDevUsersQuery: any, reducer: any, reducerPath: any, middleware: any, util: any;
export declare const getRelayApi: () => any;
export declare const useGetTodayTodos: ({ client, day }: {
    client: string;
    day?: Date | undefined;
}, args?: any, noPoll?: boolean) => any;
export declare const useClientJourneys: ({ client }: {
    client: any;
}, args?: any) => any;
export {};
//# sourceMappingURL=useApi.d.ts.map